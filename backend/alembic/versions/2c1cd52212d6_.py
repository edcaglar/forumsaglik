"""empty message

Revision ID: 2c1cd52212d6
Revises: 
Create Date: 2025-09-25 16:05:56.467202

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2c1cd52212d6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('public_id', sa.String(length=26), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_public_id'), 'categories', ['public_id'], unique=True)
    op.create_index(op.f('ix_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_index(op.f('ix_categories_title'), 'categories', ['title'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('surname', sa.String(length=30), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('bio', sa.String(length=255), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=512), nullable=True),
    sa.Column('avatar_mime', sa.String(length=32), nullable=True),
    sa.Column('avatar_width', sa.Integer(), nullable=True),
    sa.Column('avatar_height', sa.Integer(), nullable=True),
    sa.Column('avatar_sha256', sa.String(length=64), nullable=True),
    sa.Column('avatar_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('role', sa.Enum('user', 'moderator', 'admin', name='user_role_enum'), server_default='user', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index('uq_users_email_ci', 'users', [sa.literal_column('lower(email)')], unique=True, postgresql_where=sa.text('email IS NOT NULL'))
    op.create_table('category_stats',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('discussion_count', sa.Integer(), nullable=False),
    sa.Column('member_count', sa.Integer(), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_popular', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('subcategories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('public_id', sa.String(length=26), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('category_id', 'slug', name='uq_subcategories_category_slug')
    )
    op.create_index(op.f('ix_subcategories_id'), 'subcategories', ['id'], unique=False)
    op.create_index(op.f('ix_subcategories_public_id'), 'subcategories', ['public_id'], unique=True)
    op.create_table('user_email_verifications',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('email_lower', sa.String(length=255), nullable=False),
    sa.Column('token_hash', sa.String(length=128), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_uem_user_id', 'user_email_verifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_email_verifications_email'), 'user_email_verifications', ['email'], unique=False)
    op.create_index('uq_uem_email_lower_pending', 'user_email_verifications', ['email_lower'], unique=True, postgresql_where=sa.text('used_at IS NULL'))
    op.create_table('user_identities',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.String(length=32), nullable=False),
    sa.Column('provider_sub', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider', 'provider_sub', name='uq_provider_sub')
    )
    op.create_index(op.f('ix_user_identities_user_id'), 'user_identities', ['user_id'], unique=False)
    op.create_table('discussions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=False),
    sa.Column('reply_count', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('last_reply_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('public_id', sa.String(length=26), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('subcategory_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('(subcategory_id IS NULL AND category_id IS NOT NULL) OR (subcategory_id IS NOT NULL AND category_id IS NOT NULL)', name='ck_discussions_cat_or_subcat'),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subcategory_id'], ['subcategories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_discussions_user_sort', 'discussions', ['author_id', sa.literal_column('created_at DESC'), sa.literal_column('id DESC')], unique=False)
    op.create_index(op.f('ix_discussions_author_id'), 'discussions', ['author_id'], unique=False)
    op.create_index(op.f('ix_discussions_category_id'), 'discussions', ['category_id'], unique=False)
    op.create_index(op.f('ix_discussions_last_reply_at'), 'discussions', ['last_reply_at'], unique=False)
    op.create_index(op.f('ix_discussions_public_id'), 'discussions', ['public_id'], unique=True)
    op.create_index(op.f('ix_discussions_slug'), 'discussions', ['slug'], unique=False)
    op.create_index(op.f('ix_discussions_subcategory_id'), 'discussions', ['subcategory_id'], unique=False)
    op.create_table('subcategory_stats',
    sa.Column('subcategory_id', sa.Integer(), nullable=False),
    sa.Column('discussion_count', sa.Integer(), nullable=False),
    sa.Column('member_count', sa.Integer(), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_popular', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['subcategory_id'], ['subcategories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('subcategory_id')
    )
    op.create_table('replies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_edited', sa.Boolean(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('discussion_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['discussion_id'], ['discussions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_replies_user_sort', 'replies', ['author_id', sa.literal_column('created_at DESC'), sa.literal_column('id DESC')], unique=False)
    op.create_index(op.f('ix_replies_author_id'), 'replies', ['author_id'], unique=False)
    op.create_index(op.f('ix_replies_discussion_id'), 'replies', ['discussion_id'], unique=False)
    op.create_table('reply_likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('reply_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('value IN (0, 1)', name='ck_reply_like_value'),
    sa.ForeignKeyConstraint(['reply_id'], ['replies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'reply_id', name='uq_user_reply_like')
    )
    op.create_index('ix_reply_likes_reply', 'reply_likes', ['reply_id'], unique=False)
    op.create_index('ix_reply_likes_user', 'reply_likes', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_reply_likes_user', table_name='reply_likes')
    op.drop_index('ix_reply_likes_reply', table_name='reply_likes')
    op.drop_table('reply_likes')
    op.drop_index(op.f('ix_replies_discussion_id'), table_name='replies')
    op.drop_index(op.f('ix_replies_author_id'), table_name='replies')
    op.drop_index('idx_replies_user_sort', table_name='replies')
    op.drop_table('replies')
    op.drop_table('subcategory_stats')
    op.drop_index(op.f('ix_discussions_subcategory_id'), table_name='discussions')
    op.drop_index(op.f('ix_discussions_slug'), table_name='discussions')
    op.drop_index(op.f('ix_discussions_public_id'), table_name='discussions')
    op.drop_index(op.f('ix_discussions_last_reply_at'), table_name='discussions')
    op.drop_index(op.f('ix_discussions_category_id'), table_name='discussions')
    op.drop_index(op.f('ix_discussions_author_id'), table_name='discussions')
    op.drop_index('idx_discussions_user_sort', table_name='discussions')
    op.drop_table('discussions')
    op.drop_index(op.f('ix_user_identities_user_id'), table_name='user_identities')
    op.drop_table('user_identities')
    op.drop_index('uq_uem_email_lower_pending', table_name='user_email_verifications', postgresql_where=sa.text('used_at IS NULL'))
    op.drop_index(op.f('ix_user_email_verifications_email'), table_name='user_email_verifications')
    op.drop_index('idx_uem_user_id', table_name='user_email_verifications')
    op.drop_table('user_email_verifications')
    op.drop_index(op.f('ix_subcategories_public_id'), table_name='subcategories')
    op.drop_index(op.f('ix_subcategories_id'), table_name='subcategories')
    op.drop_table('subcategories')
    op.drop_table('category_stats')
    op.drop_index('uq_users_email_ci', table_name='users', postgresql_where=sa.text('email IS NOT NULL'))
    op.drop_table('users')
    op.drop_index(op.f('ix_categories_title'), table_name='categories')
    op.drop_index(op.f('ix_categories_slug'), table_name='categories')
    op.drop_index(op.f('ix_categories_public_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
